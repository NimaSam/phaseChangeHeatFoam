/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         100;

deltaT          1E-05;

writeControl    adjustableRunTime;

writeInterval   10;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.1;
maxAlphaCo      0.1;

maxDeltaT      1E-05;
libs (
    "libOpenFOAM.so" // keeps paraFoam happy
    "libtwoPhaseInterfaceProperties.so"
    "libinterfaceProperties.so"
    "libsimpleSwakFunctionObjects.so" 
    "libswakFunctionObjects.so" 
);

functions
(
    createInterface
    {
        type createSampledSurface;
        outputControl timeStep;
        outputInterval 1;
        surfaceName interface;
        surface {
            type isoSurface;
            isoField alpha1;
            isoValue 0.5;
            interpolate true;
        }
    }
    interfacePosition
    {
        type swakExpression;
        valueType surface;
        surfaceName interface;
        verbose true;
        expression "pos().x";
        accumulations (
            max
        );      
    }

    interfaceVelocity
    {
        type swakExpression;
        valueType surface;
        surfaceName interface;
        verbose true;
        expression "mag(U)";
        accumulations (
            max
        );        
    }
    
    interfaceTemperature
    {
        type swakExpression;
        valueType surface;
        surfaceName interface;
        verbose true;
        expression "T";
        accumulations (
            max
        );        
    }
);

// ************************************************************************* //
